minuto 56:00 clase firebase 2


<div
                        key={item.id}
                        className="w-[250px] mx-auto  text-center my-4 shadow-xl shadow-black"
                    >
                        <figure className="w-full border-b-2 border-black bg-neutral-300 dark:bg-neutral-700">
                            <img src={item.img} alt={item.name} />
                        </figure>
                        <div className="bg-neutral-300 pb-2 dark:bg-neutral-700">
                            <h3 className="text-2xl text-center font-signature overflow-hidden">
                                {item.name}
                            </h3>
                            <h4 className="text-2xl font-signature overflow-hidden">
                                {item.price}
                            </h4>
                            <button className="bg-neutral-400 p-2 font-signature text-xl hover:bg-orange-600 shadow-lg shadow-black duration-200">
                                <Link to={"/item/" + item.id}>
                                    VER MAS
                                </Link>
                            </button>
                        </div>
                    </div>


<!-- item list container -->
useEffect(() => {
        if (category) {
            let simulacionPedidoFilter = new Promise((res) => {
                setTimeout(() => {
                    res(
                        data.filter((item) =>
                            item.category === category ? item : item.cat
                        )
                    );
                }, 200);
            });

            simulacionPedidoFilter
                .then((respuesta) => {
                    setItems(respuesta);
                })
                .catch((error) => {
                    console.log(error);
                });
        } else {
            let simulacionPedido = new Promise((res) => {
                setTimeout(() => {
                    res(data);
                }, 200);
            });

            simulacionPedido
                .then((respuesta) => {
                    setItems(respuesta);
                })
                .catch((error) => {
                    console.log(error);
                });
        }
    }, [category]);

    <!-- use effect antes del firebase
     -->
     useEffect(() => {
        if (category) {
            let simulacionPedidoFilter = new Promise((res) => {
                setTimeout(() => {
                    res(
                        data.filter((item) =>
                            item.category === category ? item : item.cat
                        )
                    );
                }, 200);
            });

            simulacionPedidoFilter
                .then((respuesta) => {
                    setItems(respuesta);
                })
                .catch((error) => {
                    console.log(error);
                });
        } else {
            let simulacionPedido = new Promise((res) => {
                setTimeout(() => {
                    res(data);
                }, 200);
            });

            simulacionPedido
                .then((respuesta) => {
                    setItems(respuesta);
                })
                .catch((error) => {
                    console.log(error);
                });
        }
    }, [category]);